{"version":3,"sources":["setup.js","GhostMoves.js","node_modules/@babel/runtime/helpers/arrayLikeToArray.js","node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","node_modules/@babel/runtime/helpers/iterableToArray.js","node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","node_modules/@babel/runtime/helpers/nonIterableSpread.js","node_modules/@babel/runtime/helpers/toConsumableArray.js","node_modules/@babel/runtime/helpers/classCallCheck.js","node_modules/@babel/runtime/helpers/createClass.js","node_modules/@babel/runtime/helpers/defineProperty.js","GameBoard.js","Pacman.js","Ghost.js","index.js"],"names":["GRID_SIZE","CELL_SIZE","DIRECTIONS","ArrowLeft","code","movement","rotation","ArrowUp","ArrowRight","ArrowDown","OBJECT_TYPE","BLANK","WALL","DOT","BLINKY","PINKY","INKY","CLYDE","PILL","PACMAN","GHOST","SCARED","GHOSTLAIR","CLASS_LIST","LEVEL","randomMovement","position","direction","objectExist","dir","nextMovePos","keys","Object","key","Math","floor","random","length","GameBoard","DOMGrid","pos","object","grid","classList","contains","dotCount","gameWin","div","document","createElement","add","innerHTML","appendChild","level","style","cssText","forEach","square","push","objects","remove","deg","transform","character","shouldMove","getNextMove","makeMove","classesToRemove","classesToAdd","rotateDiv","removeObject","addObject","setNewPos","board","createGrid","Pacman","speed","startpos","timer","powerPill","hitWall","hitGhostLair","e","keyCode","Ghost","startPos","name","isScared","gameGrid","querySelector","scoreTable","startButton","POWER_PILL_TIME","GLOBAL_SPEED","gameBoard","createGameBoard","score","powerPillActive","powerPillTimer","playAudio","audio","Audio","play","gameOver","pacman","soundGameOver","removeEventListener","handleKeyInput","showGameStatus","clearInterval","checkCollision","ghosts","collidedGhost","find","ghost","soundGhost","gameLoop","moveCharacter","soundDot","soundPill","clearTimeout","setTimeout","startGame","soundGameStart","addEventListener","bind","setInterval"],"mappings":";AAwDO,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,MAAA,QAAA,WAAA,QAAA,YAAA,QAAA,WAAA,QAAA,UAAA,QAAA,eAAA,EAxDA,IAAMA,EAAY,GAwDlB,QAAA,UAAA,EAvDA,IAAMC,EAAY,GAuDlB,QAAA,UAAA,EAtDA,IAAMC,EAAa,CAExBC,UAAW,CACTC,KAAM,GACNC,UAAW,EACXC,SAAU,KAEZC,QAAS,CACPH,KAAM,GACNC,UAAWL,EACXM,SAAU,KAEZE,WAAY,CACVJ,KAAM,GACNC,SAAU,EACVC,SAAU,GAEZG,UAAW,CACTL,KAAM,GACNC,SAAUL,EACVM,SAAU,KAkCP,QAAA,WAAA,EA9BA,IAAMI,EAAc,CACzBC,MAAO,QACPC,KAAM,OACNC,IAAK,MACLC,OAAQ,SACRC,MAAO,QACPC,KAAM,OACNC,MAAO,QACPC,KAAM,OACNC,OAAQ,SACRC,MAAO,QACPC,OAAQ,SACRC,UAAW,QAkBN,QAAA,YAAA,EAdA,IAAMC,EAAa,CACxBb,EAAYC,MACZD,EAAYE,KACZF,EAAYG,IACZH,EAAYI,OACZJ,EAAYK,MACZL,EAAYM,KACZN,EAAYO,MACZP,EAAYQ,KACZR,EAAYS,OACZT,EAAYY,WAIP,QAAA,WAAA,EAAA,IAAME,EAAQ,CACnB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EA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","file":"Pacman.1a6a0c54.js","sourceRoot":"..","sourcesContent":["export const GRID_SIZE = 20;\nexport const CELL_SIZE = 20;\nexport const DIRECTIONS = {\n  // pacman starts facing right\n  ArrowLeft: {\n    code: 37,\n    movement: -1,\n    rotation: 180\n  },\n  ArrowUp: {\n    code: 38,\n    movement: -GRID_SIZE,\n    rotation: 270\n  },\n  ArrowRight: {\n    code: 39,\n    movement: 1,\n    rotation: 0\n  },\n  ArrowDown: {\n    code: 40,\n    movement: GRID_SIZE,\n    rotation: 90\n  }\n};\n\nexport const OBJECT_TYPE = {\n  BLANK: 'blank',\n  WALL: 'wall',\n  DOT: 'dot',\n  BLINKY: 'blinky',\n  PINKY: 'pinky',\n  INKY: 'inky',\n  CLYDE: 'clyde',\n  PILL: 'pill',\n  PACMAN: 'pacman',\n  GHOST: 'ghost',\n  SCARED: 'scared',\n  GHOSTLAIR: 'lair'\n};\n\n// Lookup array for classes\nexport const CLASS_LIST = [\n  OBJECT_TYPE.BLANK,\n  OBJECT_TYPE.WALL,\n  OBJECT_TYPE.DOT,\n  OBJECT_TYPE.BLINKY,\n  OBJECT_TYPE.PINKY,\n  OBJECT_TYPE.INKY,\n  OBJECT_TYPE.CLYDE,\n  OBJECT_TYPE.PILL,\n  OBJECT_TYPE.PACMAN,\n  OBJECT_TYPE.GHOSTLAIR\n];\n\n// prettier-ignore\nexport const LEVEL = [\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n  1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1,\n  1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1,\n  1, 7, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 7, 1,\n  1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1,\n  1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1,\n  1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1,\n  1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1,\n  0, 0, 0, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 1, 0, 0, 0,\n  0, 0, 0, 1, 2, 1, 2, 1, 9, 9, 9, 9, 1, 2, 1, 2, 1, 0, 0, 0,\n  1, 1, 1, 1, 2, 1, 2, 1, 9, 9, 9, 9, 1, 2, 1, 2, 1, 1, 1, 1, \n  1, 0, 0, 0, 2, 2, 2, 1, 9, 9, 9, 9, 1, 2, 2, 2, 0, 0, 0, 1, \n  1, 1, 1, 1, 2, 1, 2, 1, 9, 9, 9, 9, 1, 2, 1, 2, 1, 1, 1, 1, \n  0, 0, 0, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 0, 0, 0,\n  0, 0, 0, 1, 2, 1, 2, 0, 0, 0, 0, 0, 0, 2, 1, 2, 1, 0, 0, 0,\n  1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1,\n  1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1,\n  1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1,\n  1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1,\n  1, 7, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 7, 1,\n  1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1,\n  1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1,\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n];\n","import { DIRECTIONS, OBJECT_TYPE } from \"./setup\";\n\n// primitive random movement\nexport function randomMovement(position, direction, objectExist) {\n   let dir = direction;\n   let nextMovePos = position + dir.movement;\n   // create an array from the directions object keys\n   const keys = Object.keys(DIRECTIONS);\n\n   while (\n      objectExist(nextMovePos, OBJECT_TYPE.WALL) ||\n      objectExist(nextMovePos, OBJECT_TYPE.GHOST)\n   ) {\n      // get a random key rom the key array\n      const key = keys[Math.floor(Math.random() * keys.length)];\n      // set the next move\n      dir = DIRECTIONS[key];\n      nextMovePos = position + dir.movement;\n   }\n   return { nextMovePos, direction: dir };\n}","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","import {GRID_SIZE, CELL_SIZE, OBJECT_TYPE, CLASS_LIST } from './setup'\n\nclass GameBoard {\n   constructor(DOMGrid) {\n      this.dotCount = 0;\n      this.grid = [];\n      this.DOMGrid = DOMGrid;\n   }\n\n   // win or lose\n   showGameStatus(gameWin) {\n      const div = document.createElement('div');\n      div.classList.add('game-status');\n      div.innerHTML = `${gameWin ? 'WIN!' : 'GAME OVER!'}`;\n      this.DOMGrid.appendChild(div);\n   }\n\n   createGrid(level) {\n      this.dotCount = 0;\n      this.grid = [];\n      this.DOMGrid.innerHTML = '';\n      this.DOMGrid.style.cssText = `grid-template-columns: repeat(${GRID_SIZE}, ${CELL_SIZE}px)`;\n\n      level.forEach((square) => {\n         const div = document.createElement('div');\n         div.classList.add('square', CLASS_LIST[square]);\n         div.style.cssText = `width: ${CELL_SIZE}px; height: ${CELL_SIZE}px;`;\n         this.DOMGrid.appendChild(div);\n         this.grid.push(div);\n\n         // if square equals dot\n         if (CLASS_LIST[square] === OBJECT_TYPE.DOT) {\n            this.dotCount++;\n         }\n      });\n   }\n\n   addObject(pos, objects) {\n      this.grid[pos].classList.add(...objects);\n   }\n\n   removeObject(pos, objects) {\n      this.grid[pos].classList.remove(...objects);\n   }\n\n   objectExist = (pos, object) => {\n      return this.grid[pos].classList.contains(object);\n   }\n\n   // rotates pacman\n   rotateDiv(pos, deg) {\n      this.grid[pos].style.transform = `rotate(${deg}deg`;\n   }\n\n   moveCharacter(character) {\n      if (character.shouldMove()) {\n         const { nextMovePos, direction } = character.getNextMove(this.objectExist);\n         const { classesToRemove, classesToAdd } = character.makeMove();\n\n         if (character.rotation && nextMovePos !== character.pos) {\n            this.rotateDiv(nextMovePos, character.dir.rotation);\n            this.rotateDiv(character.pos, 0);\n         }\n\n         this.removeObject(character.pos, classesToRemove);\n         this.addObject(nextMovePos, classesToAdd);\n\n         character.setNewPos(nextMovePos, direction);\n      }\n   }\n\n   static createGameBoard(DOMGrid, level) {\n      const board = new this(DOMGrid);\n      board.createGrid(level);\n      return board;\n   }\n}\n\nexport default GameBoard;","import { OBJECT_TYPE, DIRECTIONS } from \"./setup\";\n\nclass Pacman {\n   constructor(speed, startpos) {\n      this.pos = startpos;\n      this.speed = speed;\n      this.dir = null;\n      this.timer = 0;\n      this.powerPill = false;\n      this.rotation = true;\n   }\n   \n   shouldMove() {\n      if (!this.dir) return false;\n\n      if (this.timer === this.speed) {\n         this.timer = 0;\n         return true;\n      }\n      this.timer++;\n   }\n\n   getNextMove(objectExist) {\n      let nextMovePos = this.pos + this.dir.movement;\n      \n      let hitWall = objectExist(nextMovePos, OBJECT_TYPE.WALL);\n      let hitGhostLair = objectExist(nextMovePos, OBJECT_TYPE.GHOSTLAIR);\n      \n      if (hitWall || hitGhostLair) {\n         nextMovePos = this.pos;\n      }\n\n      return { nextMovePos, direction: this.dir};\n   }\n\n   makeMove() {\n      const classesToRemove = [OBJECT_TYPE.PACMAN];\n      const classesToAdd = [OBJECT_TYPE.PACMAN];\n\n      return { classesToRemove, classesToAdd };\n   }\n\n   setNewPos(nextMovePos) {\n      this.pos = nextMovePos;\n   }\n\n   handleKeyInput(e, objectExist) {\n      let dir; \n\n      if (e.keyCode >= 37 && e.keyCode <= 40) {\n         dir = DIRECTIONS[e.key]\n      }  \n      else {\n         return;\n      }\n\n      const nextMovePos = this.pos + dir.movement;\n      if (objectExist(nextMovePos, OBJECT_TYPE.WALL) || \n      objectExist(nextMovePos, OBJECT_TYPE.GHOSTLAIR)) return;\n      this.dir = dir;\n   }\n}\nexport default Pacman;","import { DIRECTIONS, OBJECT_TYPE } from \"./setup\";\n\nclass Ghost {\n   constructor(speed = 5, startPos, movement, name) {\n      this.speed = speed;\n      this.name = name;\n      this.movement = movement;\n      this.startPos = startPos;\n      this.pos = startPos;\n      this.dir = DIRECTIONS.ArrowRight;\n      this.timer = 0;\n      this.isScared = false;\n      this.rotation = false;\n   }\n\n   shouldMove() {\n      if (this.timer === this.speed) {\n         this.timer = 0;\n         return true;\n      }\n      this.timer++;\n      return false;\n   }\n\n   getNextMove(objectExist) {\n      const { nextMovePos, direction } = this.movement(\n         this.pos, \n         this.dir,\n         objectExist\n      );\n      return { nextMovePos, direction };\n   }\n\n   makeMove() {\n      const classesToRemove = [OBJECT_TYPE.GHOST, OBJECT_TYPE.SCARED, this.name];\n      let classesToAdd = [OBJECT_TYPE.GHOST, this.name];\n\n      if (this.isScared) {\n         classesToAdd = [...classesToAdd, OBJECT_TYPE.SCARED];\n      }\n\n      return { classesToRemove, classesToAdd };\n   }\n\n   setNewPos(nextMovePos, direction) {\n      this.pos = nextMovePos;\n      this.dir = direction;\n   }\n}\nexport default Ghost;","import { LEVEL, OBJECT_TYPE } from './setup';\nimport { randomMovement } from './GhostMoves';\n\n// Classes\nimport GameBoard from './GameBoard';\nimport Pacman from './Pacman';\nimport Ghost from './Ghost';\n\n// sounds\nimport soundDot from './sounds/munch.wav';\nimport soundPill from './sounds/pill.wav';\nimport soundGameStart from './sounds/game_start.wav';\nimport soundGameOver from './sounds/death.wav';\nimport soundGhost from './sounds/eat_ghost.wav';\n\n// DOM Elements\nconst gameGrid = document.querySelector('#game');\nconst scoreTable = document.querySelector('#score');\nconst startButton = document.querySelector('#start-button');\n\n// Game Consts\nconst POWER_PILL_TIME = 10000; // ms\nconst GLOBAL_SPEED = 80; // ms\nconst gameBoard = GameBoard.createGameBoard(gameGrid, LEVEL);\n\n// Inital Setup\nlet score = 0;\nlet timer = null;\nlet gameWin = false;\nlet powerPillActive = false; // when pacman eats power pill\nlet powerPillTimer = null;\n\n// audio\nfunction playAudio(audio) {\n   const soundEffect = new Audio(audio);\n   soundEffect.play();\n}\n\nfunction gameOver(pacman, grid) {\n   playAudio(soundGameOver);\n   document.removeEventListener('keydown', (e) => {\n      pacman.handleKeyInput(e, gameBoard.objectExist);\n   })\n\n   gameBoard.showGameStatus(gameWin);\n\n   clearInterval(timer);\n\n   startButton.classList.remove('hide');\n}\n\nfunction checkCollision(pacman, ghosts) {\n   const collidedGhost = ghosts.find(ghost => pacman.pos == ghost.pos);\n\n   if (collidedGhost) {\n      // pacman eats a ghost\n      if (pacman.powerPill) {\n         playAudio(soundGhost);\n\n         gameBoard.removeObject(collidedGhost.pos, [\n            OBJECT_TYPE.GHOST,\n            OBJECT_TYPE.SCARED,\n            collidedGhost.name\n         ]);\n         collidedGhost.pos = collidedGhost.startPos;\n         score += 100;\n      } else {\n         gameBoard.removeObject(pacman.pos, [OBJECT_TYPE.PACMAN]);\n         gameBoard.rotateDiv(pacman.pos, 0);\n         gameOver(pacman, gameGrid);\n      }\n   }\n}\n\nfunction gameLoop(pacman, ghosts) {\n   gameBoard.moveCharacter(pacman);\n   checkCollision(pacman, ghosts);\n\n   ghosts.forEach((ghost) => gameBoard.moveCharacter(ghost));\n   checkCollision(pacman, ghosts);\n\n   // check if pacman eats a dot\n   if (gameBoard.objectExist(pacman.pos, OBJECT_TYPE.DOT)) {\n      playAudio(soundDot);\n      gameBoard.removeObject(pacman.pos, [OBJECT_TYPE.DOT]);\n      gameBoard.dotCount--;\n      score += 10;\n   }\n\n   // check if pacman eats a powerpill\n   if (gameBoard.objectExist(pacman.pos, OBJECT_TYPE.PILL)) {\n      playAudio(soundPill);\n\n      gameBoard.removeObject(pacman.pos, [OBJECT_TYPE.PILL]);\n\n      pacman.powerPill = true;\n      score += 50;\n\n      clearTimeout(powerPillTimer);\n\n      powerPillTimer = setTimeout( \n         () => (pacman.powerPill = false),\n         POWER_PILL_TIME\n      );\n   }\n\n   // scare ghost\n   if (pacman.powerPill !== powerPillActive) {\n      powerPillActive = pacman.powerPill;\n      ghosts.forEach((ghost) => (ghost.isScared = pacman.powerPill));\n   }\n\n   // check if all dots have been eaten\n   if (gameBoard.dotCount === 0) {\n      gameWin = true;\n      gameOver(pacman, ghosts);\n   }\n\n   // shor the score\n   scoreTable.innerHTML = score;\n}\n\nfunction startGame() {\n   playAudio(soundGameStart);\n\n   gameWin = false;\n   powerPillActive = false;\n   score = 0;\n\n   startButton.classList.add('hide');\n\n   gameBoard.createGrid(LEVEL);\n\n   const pacman = new Pacman(2, 287);\n\n   gameBoard.addObject(287, [OBJECT_TYPE.PACMAN]);\n\n   document.addEventListener('keydown', (e) => {\n      pacman.handleKeyInput(e, gameBoard.objectExist.bind(gameBoard));\n   });\n\n   const ghosts = [\n      new Ghost(5, 188, randomMovement, OBJECT_TYPE.BLINKY),\n      new Ghost(4, 209, randomMovement, OBJECT_TYPE.PINKY),\n      new Ghost(3, 230, randomMovement, OBJECT_TYPE.INKY),\n      new Ghost(2, 251, randomMovement, OBJECT_TYPE.CLYDE),\n   ];\n\n   timer = setInterval(() => gameLoop(pacman, ghosts), GLOBAL_SPEED);\n}\n\n// initialize game\nstartButton.addEventListener('click', startGame);\n"]}